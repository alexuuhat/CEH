# Wireshark Filters Organized by Category

## Basic Filters

# Protocol Filters
tcp.port eq 80                         # same for 443  
tcp.port==80                          # same for 443  
tcp.port==80 or tcp.port==443  
tcp.port==80 || tcp.port==443 || tcp.port==8080  
tcp.port in {80 443 8080}  

tcp.srcport==80                       # same for 443  
tcp.dstport==80                       # same for 443  
udp.port==53  
tcp  
udp  
dns  

# IP Address Filters
ip.src  
ip.dst  
ip.addr==192.168.1.1                  # Filter traffic from/to this IP  
!(ip.addr==192.198.1.1)               # Exclude this IP  
!(ip.addr==192.168.0.193) and !(ip.addr==192.168.0.1)  

## Web Traffic Filters

http.host == "testphp.vulnweb.com"   # Finding only http not https  
http.response.code==200  
http.request.method=="GET"  
http.request or http.response  
http.host contains "example.com" || http.host contains "example.org" || http.host contains "example.net"  
tcp contains "admin"  
tcp contains "uname"  
tcp contains "pass"  

# Frame Filters
frame contains "uname"  
frame contains "pass"  

## Advanced Filters

# IP and Traffic Exclusions
!ip.addr ==192.168.0.1               # Exclude specific IP  
!(arp or icmp or dns)                # Filter out broadcast traffic  

# Traffic Between Specific Hosts/Subnets
ip.addr == 192.168.0.1/24 and ip.addr == 192.168.1.1/24  
ip.addr == 192.168.0.193 and ip.addr == 192.168.0.187  

# Filtering by IP and Port
tcp.port == 80 && ip.addr == 192.168.0.1  

## Security & Attack Detection Filters

# Three-Way Handshake
tcp.flags.syn==1 or (tcp.seq==1 and tcp.ack==1 and tcp.len==0 and tcp.analysis.initial_rtt)  

# SYN Flood Detection (Detect DDOS)
tcp.flags.syn == 1 and tcp.flags.ack == 0  

# TCP SYN Scan Patterns
tcp.flags.syn==1 and tcp.flags.ack==0 and tcp.window_size <= 1024  

# TCP Connect Scan Patterns
tcp.flags.syn==1 and tcp.flags.ack==0 and tcp.window_size > 1024  

# UDP Scan Patterns
icmp.type==3 and icmp.code==3  

## MAC Address & Specific Traffic Filters

# Filter ARP Requests by MAC Address
arp.opcode == 1 and eth.src == 00:0c:29:e2:18:b4  

# Filter HTTP Received by Specific MAC Address
http and eth.addr == 00:0c:29:e2:18:b4  

## TLS Handshake Filters

# Client "Hello" Packet
(http.request or tls.handshake.type == 1) and !(ssdp)  

# Server "Hello" Packet
(http.request or tls.handshake.type == 2) and !(ssdp)  

## IoT Filters
mqtt
